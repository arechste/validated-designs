{"status":{},"contains_secrets":false,"product_version":"3.6.0","spec":{"description":"Gold Tier, 100 VMs","resources":{"client_attrs":{"NutanixMYSQLDeployment":{"y":-269.127747764,"x":-488.185398037},"None":{"y":32.8650459518,"x":-295.1696752353}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___create___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___create___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___create___dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___start___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___start___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___start___dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___stop___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___stop___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___stop___dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___delete___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___delete___dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___restart___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___restart___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___restart___dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"MYSQLSvc___soft_delete___dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"MYSQLSvc___soft_delete___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQLSvc___soft_delete___dag"},"variable_list":[]},"name":"action_soft_delete"}],"depends_on_list":[],"name":"Win2k19svc","port_list":[],"tier":"","variable_list":[],"description":""}],"substrate_definition_list":[{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Windows2019"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"a5f82c2c_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"01f7ca30_runbook","main_task_local_reference":{"kind":"app_task","name":"a5f82c2c_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Windows2019"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"eff27ccf_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"10e423d7_runbook","main_task_local_reference":{"kind":"app_task","name":"eff27ccf_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"Windows2019","readiness_probe":{"connection_type":"POWERSHELL","retries":"2","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"90","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"Adcredentials"}},"editables":{"readiness_probe":{"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{}},"serial_port_list":{},"boot_config":true}}},"os_type":"Windows","create_spec":{"name":"@@{calm_application_name}@@-@@{calm_unique}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"vlan.0","uuid":"8434046e-fad4-4837-bcf2-02f91be79c6f"},"type":""}],"serial_port_list":[],"guest_tools":null,"type":"","num_vcpus_per_socket":2,"num_sockets":1,"gpu_list":[],"parent_reference":null,"memory_size_mib":6144,"power_state":"ON","hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n    <settings pass=\"specialize\">\n        <component name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <ComputerName>@@{name}@@<\/ComputerName>\n            <RegisteredOrganization>Nutanix<\/RegisteredOrganization>\n            <RegisteredOwner>NVD<\/RegisteredOwner>\n            <TimeZone>Central Standard Time<\/TimeZone>\n        <\/component>\n        <component name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <InputLocale>en-US<\/InputLocale>\n            <SystemLocale>en-US<\/SystemLocale>\n            <UILanguage>en-US<\/UILanguage>\n            <UserLocale>en-US<\/UserLocale>\n        <\/component>\n        <component name=\"Microsoft-Windows-UnattendedJoin\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <Identification>\n                <Credentials>\n                    <Domain>@@{domain_name}@@<\/Domain>\n                    <Username>administrator<\/Username>\n                    <Password>@@{ak_nvd.secret}@@<\/Password>\n                <\/Credentials>\n                <JoinDomain>@@{domain_name}@@<\/JoinDomain>\n            <\/Identification>\n        <\/component>\n    <\/settings>\n    <settings pass=\"oobeSystem\">\n        <component name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <InputLocale>en-US<\/InputLocale>\n            <SystemLocale>en-US<\/SystemLocale>\n            <UILanguage>en-US<\/UILanguage>\n            <UserLocale>en-US<\/UserLocale>\n        <\/component>\n        <component name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <OOBE>\n                <HideEULAPage>true<\/HideEULAPage>\n            <\/OOBE>\n            <UserAccounts>\n                <AdministratorPassword>\n                    <Value>@@{ak_nvd.secret}@@<\/Value>\n                    <PlainText>true<\/PlainText>\n                <\/AdministratorPassword>\n            <\/UserAccounts>\n        <\/component>\n    <\/settings>\n    <settings pass=\"generalize\">\n        <component name=\"Microsoft-Windows-PnpSysprep\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n            <PersistAllDeviceInstalls>true<\/PersistAllDeviceInstalls>\n        <\/component>\n    <\/settings>\n<\/unattend>","type":""}},"machine_type":"Q35","account_uuid":"891153a5-b7f9-44f7-b790-c33809cce06d","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"SECURE_BOOT","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"win2k22","uuid":"36ab3cd8-3b98-4e33-af68-059d83a629fc"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SATA"},"device_type":"CDROM"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"AZ01APPS02","uuid":"0005f187-92fa-57fa-47de-3cecef82f00c"},"categories":{"AZ01-DR-Gold-01":"RPOZero","AppTier":"RDP","AppType":"AZ01SINGLE01","AZ01-Backup-01":"RPO24h"}},"variable_list":[]}],"credential_definition_list":[{"username":"user@domain.com","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Adcredentials","cred_class":"static"},{"username":"user@domain.com","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"prism_central","cred_class":"static"}],"package_definition_list":[{"description":"","action_list":[],"type":"CUSTOM","service_local_reference_list":[{"kind":"app_service","name":"Win2k19svc"}],"name":"ChocoSvc","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"installNgtLinux"},{"kind":"app_task","name":"AddDNS"},{"kind":"app_task","name":"Pause15"},{"kind":"app_task","name":"UnmountNgt"},{"kind":"app_task","name":"Install_IIS"}],"name":"MYSQL_PACKAGE___install___dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"installNgtLinux"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"AddDNS"}},{"from_task_reference":{"kind":"app_task","name":"AddDNS"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"UnmountNgt"}},{"from_task_reference":{"kind":"app_task","name":"AddDNS"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Pause15"}},{"from_task_reference":{"kind":"app_task","name":"Pause15"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Install_IIS"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"installNgtLinux","attrs":{"script":"# region headers\n\"\"\"\n# escript-template v20190523 \/ stephane.bourdeaud@nutanix.com\n# * author:       stephane.bourdeaud@nutanix.com\n# * version:      2019\/06\/04\n# task_name:      PcMountNgt\n# description:    This script mounts the Nutanix Guest Tools on the AHV\n#                 virtual machine provisioned by Calm.\n\"\"\"\n# endregion\n\n# region capture Calm macros\npc_user = \"@@{prism_central_username}@@\"\npc_password = \"@@{prism_central_secret}@@\"\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\ncluster_uuid = \"@@{platform.status.cluster_reference.uuid}@@\"\npc_ip = \"@@{prism_central_ip}@@\"\n# endregion\n\n# region prepare variables\ncluster_uuid_url = \"https:\/\/{}:9440\/api\/nutanix\/v3\/clusters\/{}\".format(\n    pc_ip,\n    cluster_uuid\n)\nheaders = {\n    'Accept': 'application\/json',\n    'Content-Type': 'application\/json; charset=UTF-8'\n}\n# endregion\n\n\n# region functions\nimport requests\n\ndef process_request(url, method, user, password, headers, payload=None, secure=False):\n    \"\"\"\n    Processes a web request and handles result appropriately with retries.\n    Returns the content of the web request if successfull.\n    \"\"\"\n    if payload is not None:\n        payload = json.dumps(payload)\n\n    #configuring web request behavior\n    timeout=10\n    retries = 5\n    sleep_between_retries = 5\n\n    while retries > 0:\n        try:\n\n            if method is 'GET':\n                response = requests.get(\n                    url,\n                    headers=headers,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'POST':\n                response = requests.post(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'PUT':\n                response = requests.put(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'PATCH':\n                response = requests.patch(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'DELETE':\n                response = requests.delete(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n\n        except requests.exceptions.HTTPError as error_code:\n            print (\"Http Error!\")\n            print(\"status code: {}\".format(response.status_code))\n            print(\"reason: {}\".format(response.reason))\n            print(\"text: {}\".format(response.text))\n            print(\"elapsed: {}\".format(response.elapsed))\n            print(\"headers: {}\".format(response.headers))\n            if payload is not None:\n                print(\"payload: {}\".format(payload))\n            print(json.dumps(\n                json.loads(response.content),\n                indent=4\n            ))\n            exit(response.status_code)\n        except requests.exceptions.ConnectionError as error_code:\n            print (\"Connection Error!\")\n            if retries == 1:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                exit(1)\n            else:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                sleep(sleep_between_retries)\n                retries -= 1\n                print (\"retries left: {}\".format(retries))\n                continue\n            print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n            exit(1)\n        except requests.exceptions.Timeout as error_code:\n            print (\"Timeout Error!\")\n            if retries == 1:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                exit(1)\n            print('Error! Code: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n            sleep(sleep_between_retries)\n            retries -= 1\n            print (\"retries left: {}\".format(retries))\n            continue\n        except requests.exceptions.RequestException as error_code:\n            print (\"Error!\")\n            exit(response.status_code)\n        break\n\n    if response.ok:\n        return response\n    if response.status_code == 401:\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        exit(response.status_code)\n    elif response.status_code == 500:\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        print(\"text: {0}\".format(response.text))\n        exit(response.status_code)\n    else:\n        print(\"Request failed!\")\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        print(\"text: {0}\".format(response.text))\n        print(\"raise_for_status: {0}\".format(response.raise_for_status()))\n        print(\"elapsed: {0}\".format(response.elapsed))\n        print(\"headers: {0}\".format(response.headers))\n        if payload is not None:\n            print(\"payload: {0}\".format(payload))\n        print(json.dumps(\n            json.loads(response.content),\n            indent=4\n        ))\n        exit(response.status_code)\n      \n# endregion\n\n# region get the AHV cluster IP address\nmethod = 'GET'\nurl = cluster_uuid_url\nprint(\"Retrieving cluster IP address...\")\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\n\nif resp.ok:\n    result = json.loads(resp.content)\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    cluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n    print(\"The AHV cluster IP address is {}\".format(cluster_ip))\nelse:\n    exit(1)\n# endregion\n\n# region mount the NGT image (to regenerate the certificates)\nmethod = 'POST'\nurl = \"https:\/\/{}:9440\/PrismGateway\/services\/rest\/v1\/vms\/{}\/guest_tools\/mount\".format(\n    cluster_ip,\n    vm_uuid\n)\nprint(\"Mounting NGT...\")\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\nresult = json.loads(resp.content)\n\nif resp.ok:\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"NGT mounted\")\n    exit(0)\nelse:\n    exit(1)\n# endregion","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","exec_target_reference":{"kind":"app_endpoint","name":"AZ01AD01"},"inherit_target":false,"child_tasks_local_reference_list":[],"name":"AddDNS","attrs":{"exit_status":[],"script":"Add-DnsServerResourceRecordA -Name \"@@{name}@@\" -ZoneName \"@@{domain_name}@@\" -AllowUpdateAny -CreatePtr -IPv4Address \"@@{address}@@\" -TimeToLive 01:00:00","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Adcredentials"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Pause15","attrs":{"script":"sleep(15)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"UnmountNgt","attrs":{"script":"# region headers\n\"\"\"\n# escript-template v20190523 \/ stephane.bourdeaud@nutanix.com\n# * author:       stephane.bourdeaud@nutanix.com\n# * version:      2019\/06\/04\n# task_name:      PcMountNgt\n# description:    This script mounts the Nutanix Guest Tools on the AHV\n#                 virtual machine provisioned by Calm.\n\"\"\"\n# endregion\nsleep(60)\n# region capture Calm macros\npc_user = \"@@{prism_central.username}@@\"\npc_password = \"@@{prism_central.secret}@@\"\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\ncluster_uuid = \"@@{platform.status.cluster_reference.uuid}@@\"\npc_ip = \"@@{prism_central_ip}@@\"\n# endregion\n\n# region prepare variables\ncluster_uuid_url = \"https:\/\/{}:9440\/api\/nutanix\/v3\/clusters\/{}\".format(\n    pc_ip,\n    cluster_uuid\n)\nheaders = {\n    'Accept': 'application\/json',\n    'Content-Type': 'application\/json; charset=UTF-8'\n}\n# endregion\n\n\n# region functions\nimport requests\n\ndef process_request(url, method, user, password, headers, payload=None, secure=False):\n    \"\"\"\n    Processes a web request and handles result appropriately with retries.\n    Returns the content of the web request if successfull.\n    \"\"\"\n    if payload is not None:\n        payload = json.dumps(payload)\n\n    #configuring web request behavior\n    timeout=10\n    retries = 5\n    sleep_between_retries = 5\n\n    while retries > 0:\n        try:\n\n            if method is 'GET':\n                response = requests.get(\n                    url,\n                    headers=headers,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'POST':\n                response = requests.post(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'PUT':\n                response = requests.put(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'PATCH':\n                response = requests.patch(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n            elif method is 'DELETE':\n                response = requests.delete(\n                    url,\n                    headers=headers,\n                    data=payload,\n                    auth=(user, password),\n                    verify=secure,\n                    timeout=timeout\n                )\n\n        except requests.exceptions.HTTPError as error_code:\n            print (\"Http Error!\")\n            print(\"status code: {}\".format(response.status_code))\n            print(\"reason: {}\".format(response.reason))\n            print(\"text: {}\".format(response.text))\n            print(\"elapsed: {}\".format(response.elapsed))\n            print(\"headers: {}\".format(response.headers))\n            if payload is not None:\n                print(\"payload: {}\".format(payload))\n            print(json.dumps(\n                json.loads(response.content),\n                indent=4\n            ))\n            exit(response.status_code)\n        except requests.exceptions.ConnectionError as error_code:\n            print (\"Connection Error!\")\n            if retries == 1:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                exit(1)\n            else:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                sleep(sleep_between_retries)\n                retries -= 1\n                print (\"retries left: {}\".format(retries))\n                continue\n            print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n            exit(1)\n        except requests.exceptions.Timeout as error_code:\n            print (\"Timeout Error!\")\n            if retries == 1:\n                print('Error: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n                exit(1)\n            print('Error! Code: {c}, Message: {m}'.format(c = type(error_code).__name__, m = str(error_code)))\n            sleep(sleep_between_retries)\n            retries -= 1\n            print (\"retries left: {}\".format(retries))\n            continue\n        except requests.exceptions.RequestException as error_code:\n            print (\"Error!\")\n            exit(response.status_code)\n        break\n\n    if response.ok:\n        return response\n    if response.status_code == 401:\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        exit(response.status_code)\n    elif response.status_code == 500:\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        print(\"text: {0}\".format(response.text))\n        exit(response.status_code)\n    else:\n        print(\"Request failed!\")\n        print(\"status code: {0}\".format(response.status_code))\n        print(\"reason: {0}\".format(response.reason))\n        print(\"text: {0}\".format(response.text))\n        print(\"raise_for_status: {0}\".format(response.raise_for_status()))\n        print(\"elapsed: {0}\".format(response.elapsed))\n        print(\"headers: {0}\".format(response.headers))\n        if payload is not None:\n            print(\"payload: {0}\".format(payload))\n        print(json.dumps(\n            json.loads(response.content),\n            indent=4\n        ))\n        exit(response.status_code)\n      \n# endregion\n\n# region get the AHV cluster IP address\nmethod = 'GET'\nurl = cluster_uuid_url\nprint(\"Retrieving cluster IP address...\")\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\n\nif resp.ok:\n    result = json.loads(resp.content)\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    cluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n    print(\"The AHV cluster IP address is {}\".format(cluster_ip))\nelse:\n    exit(1)\n# endregion\n\n# region mount the NGT image (to regenerate the certificates)\nmethod = 'POST'\nurl = \"https:\/\/{}:9440\/PrismGateway\/services\/rest\/v1\/vms\/{}\/guest_tools\/unmount\".format(\n    cluster_ip,\n    vm_uuid\n)\nprint(\"Unmounting NGT...\")\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\nresult = json.loads(resp.content)\n\nif resp.ok:\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"NGT Unmounted\")\n    exit(0)\nelse:\n    exit(1)\n# endregion","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Install_IIS","attrs":{"exit_status":[],"script":"Install-WindowsFeature -name Web-Server -IncludeManagementTools","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Adcredentials"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"MYSQL_PACKAGE___install___runbook","main_task_local_reference":{"kind":"app_task","name":"MYSQL_PACKAGE___install___dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"RemoveDnsEntry"}],"name":"DAG_Task_for_Package_MYSQL_PACKAGE_action_uninstall","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","exec_target_reference":{"kind":"app_endpoint","name":"AZ01AD01"},"inherit_target":false,"child_tasks_local_reference_list":[],"name":"RemoveDnsEntry","attrs":{"exit_status":[],"script":"Remove-DnsServerResourceRecord -ZoneName \"@@{domain_name}@@\" -RRType \"A\" -Name \"@@{name}@@\" -RecordData \"@@{address}@@\" -Force","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Adcredentials"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"Runbook_for_Package_MYSQL_PACKAGE_action_uninstall","main_task_local_reference":{"kind":"app_task","name":"DAG_Task_for_Package_MYSQL_PACKAGE_action_uninstall"},"variable_list":[]},"upgrade_runbook":{}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"NutanixMYSQLDeployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"ChocoSvc"}],"substrate_local_reference":{"kind":"app_substrate","name":"Windows2019"},"options":{"type":""},"variable_list":[],"description":""}],"environment_reference_list":[],"application_url":"","description":"","action_list":[],"name":"Nutanix","restore_config_list":[],"snapshot_config_list":[],"patch_list":[{"name":"Update Config","type":"PATCH","is_system_generated":false,"variable_list":[],"attrs_list":[{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"NutanixMYSQLDeployment"},"data":{"num_vcpus_per_socket_ruleset":{"type":""},"num_sockets_ruleset":{"type":""},"disk_delete_allowed":false,"pre_defined_nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[],"network_function_chain_reference":null,"editable":false,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"vlan.0","uuid":"8434046e-fad4-4837-bcf2-02f91be79c6f"},"operation":"modify","identifier":"0","type":""}],"categories_delete_allowed":true,"pre_defined_categories":[{"operation":"modify","type":"","value":"AZ01-DR-Bronze-01:RPO1h"},{"operation":"modify","type":"","value":"AppTier:RDP"},{"operation":"modify","type":"","value":"AppType:AZ01SINGLE01"},{"operation":"modify","type":"","value":"AZ01-Backup-01:RPO24h"}],"pre_defined_disk_list":[{"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"},"operation":"modify","data_source_reference":{"kind":"image","type":"","name":"nvd_win2k19.qcow2","uuid":"64d2a845-b8ff-47e1-a5e5-77091bd7d316"},"type":"","disk_size_mib":null,"volume_group_reference":null},{"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SATA"},"device_type":"CDROM"},"operation":"modify","data_source_reference":null,"type":"","disk_size_mib":null,"volume_group_reference":null}],"nic_delete_allowed":false,"type":"nutanix","memory_size_mib_ruleset":{"type":""},"categories_add_allowed":true},"deployment_strategy":{"type":""},"uuid":"7ae328ef-4b4a-a55a-726e-08ecbafbb7c1"}],"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"Update Config_meta_task"}],"name":"SYS_GEN__DAG_Patch_Update Config_0e1c92eb_a0bd_0cae_56cf_9852f80d68b3","attrs":{"edges":[],"type":"DAG"},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"Update Config_update_spec_task"},{"kind":"app_task","name":"Update Config_Win2k19svc"}],"name":"Update Config_meta_task","attrs":{"type":"","patch_attrs_reference":["7ae328ef-4b4a-a55a-726e-08ecbafbb7c1"]},"timeout_secs":"0","type":"PATCH_META","variable_list":[]},{"target_any_local_reference":{"kind":"app_profile","name":"Nutanix"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Update Config_update_spec_task","attrs":{"type":""},"timeout_secs":"0","type":"UPDATE_SPEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_blueprint_deployment","name":"NutanixMYSQLDeployment"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"SYS_GEN__stop"},{"kind":"app_task","name":"SYS_GEN__Nutanix_Update_607c1ac4_c5df_4201_a9a2_1c685e338626"},{"kind":"app_task","name":"SYS_GEN__start"}],"name":"Update Config_Win2k19svc","attrs":{"loop_variable":"","type":"","loop_counter":"","exit_condition_type":"","patch_attr_reference":"7ae328ef-4b4a-a55a-726e-08ecbafbb7c1","loop_over_list":""},"timeout_secs":"0","type":"FOR_LOOP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"SYS_GEN__stop","attrs":{"type":"CALL_RUNBOOK","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"MYSQLSvc___stop___runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Windows2019"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"SYS_GEN__Nutanix_Update_607c1ac4_c5df_4201_a9a2_1c685e338626","attrs":{"type":""},"timeout_secs":"0","type":"UPDATE_NUTANIX","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Win2k19svc"},"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"SYS_GEN__start","attrs":{"type":"CALL_RUNBOOK","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"MYSQLSvc___start___runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"SYS_GEN__Runbook_Patch_Update Config_0e1c92eb_a0bd_0cae_56cf_9852f80d68b3","main_task_local_reference":{"kind":"app_task","name":"SYS_GEN__DAG_Patch_Update Config_0e1c92eb_a0bd_0cae_56cf_9852f80d68b3"},"variable_list":[]},"config_reference_list":[],"description":""}],"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"prism_central_ip","value":"<ip_address>","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"prism_central_username","value":"user@domain.com","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"prism_central_secret","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"domain_name","value":"<domain_name>","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"Adcredentials"},"type":"USER"},"name":"Win2k22-public"},"api_version":"3.0","metadata":{"last_update_time":"1676313551884380","kind":"blueprint","spec_version":2,"creation_time":"1676313466404246","categories":{"AppFamily":"DevOps"},"name":"Win2k22-public"}}